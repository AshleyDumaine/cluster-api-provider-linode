apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: LinodeCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: LinodeCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  region: ${LINODE_REGION}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    infrastructureRef:
      kind: LinodeMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      name: ${CLUSTER_NAME}-control-plane
  kubeadmConfigSpec:
    files:
      - path: /kubeadm-init.sh
        content: |
          #!/bin/bash
          export DEBIAN_FRONTEND=noninteractive
          apt-get update -y
          apt-get install -y apt-transport-https ca-certificates curl gpg
          mkdir -p -m 755 /etc/apt/keyrings
          K8S_VERSION=$1
          K8S_MINOR_VERSION=${K8S_VERSION%.*}
          curl -fsSL https://pkgs.k8s.io/core:/stable:/v${K8S_MINOR_VERSION}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
          echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v${K8S_MINOR_VERSION}/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
          apt-get update
          apt-get install -y kubelet kubeadm kubectl containerd
          apt-mark hold kubelet kubeadm kubectl containerd
        permissions: "0777"
    preKubeadmCommands:
      - /kubeadm-init.sh ${KUBERNETES_VERSION}
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
        timeoutForControlPlane: 20m
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: 'linode:///{{ ds.meta_data.region }}/{{ ds.meta_data.id }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: 'linode:///{{ ds.meta_data.region }}/{{ ds.meta_data.id }}'
  version: "${KUBERNETES_VERSION}"
---
kind: LinodeMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      image: ${LINODE_OS}
      rootPass: ${LINODE_ROOT_PASS}
      type: ${LINODE_CONTROL_PLANE_MACHINE_TYPE}
      region: ${LINODE_REGION}
      authorizedKeys:
        - ${LINODE_SSH_KEY}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels:
  template:
    spec:
      clusterName: ${CLUSTER_NAME}
      version: "${KUBERNETES_VERSION}"
      bootstrap:
        configRef:
          name: ${CLUSTER_NAME}-md-0
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ${CLUSTER_NAME}-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: LinodeMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      image: ${LINODE_OS}
      rootPass: ${LINODE_ROOT_PASS}
      type: ${LINODE_MACHINE_TYPE}
      region: ${LINODE_REGION}
      authorizedKeys:
        - ${LINODE_SSH_KEY}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: 'linode:///{{ ds.meta_data.region }}/{{ ds.meta_data.id }}'
